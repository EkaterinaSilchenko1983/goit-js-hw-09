{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAE9BC,GADQF,SAASC,cAAc,UACrBD,SAASC,cAAc,wBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAMxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAE1BC,YAAW,WACjBH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIPR,EAAKgB,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOjB,EAAQkB,OACvBC,EAAOF,OAAOhB,EAAOiB,OACrBE,EAASH,OAAOf,EAASgB,OAEpBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAckB,EAAI,EAAGL,EAAQG,EAAOE,GACjCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOC,QACd,sBAAqCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAKnDS,EAAMe,cAAcC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst btnEl = document.querySelector('button');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nlet promiseId = null;\n// let delay = Number(delayEl.value);\n// let step = Number(stepEl.value);\n// let amount = Number(amountEl.value);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    promiseId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\n  let delay = Number(delayEl.value);\n  let step = Number(stepEl.value);\n  let amount = Number(amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  event.currentTarget.reset();\n  // clearInterval(timerId);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","failure","concat","catch","currentTarget","reset"],"version":3,"file":"03-promises.1990d00a.js.map"}